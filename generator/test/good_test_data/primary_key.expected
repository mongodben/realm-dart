// **************************************************************************
// RealmObjectGenerator
// **************************************************************************

class IntPK extends _IntPK
    with RealmEntityMixin, RealmObjectBaseMixin, RealmObjectMixin {
  IntPK(
    int id,
  ) {
    _idProperty.setValue(this, id);
  }

  IntPK._();

  static const _idProperty = ValueProperty<int>(
    'id',
    RealmPropertyType.int,
    primaryKey: true,
  );
  @override
  int get id => _idProperty.getValue(this);
  @override
  set id(int value) => throw RealmUnsupportedSetError();

  @override
  Stream<RealmObjectChanges<IntPK>> get changes =>
      RealmObjectBaseMixin.getChanges(this);

  static const schema = SchemaObject<IntPK>(
    IntPK._,
    'IntPK',
    {
      'id': _idProperty,
    },
    _idProperty,
  );
  @override
  SchemaObject get instanceSchema => schema;
}

class NullableIntPK extends _NullableIntPK
    with RealmEntityMixin, RealmObjectBaseMixin, RealmObjectMixin {
  NullableIntPK(
    int? id,
  ) {
    _idProperty.setValue(this, id);
  }

  NullableIntPK._();

  static const _idProperty = ValueProperty<int?>(
    'id',
    RealmPropertyType.int,
    primaryKey: true,
  );
  @override
  int? get id => _idProperty.getValue(this);
  @override
  set id(int? value) => throw RealmUnsupportedSetError();

  @override
  Stream<RealmObjectChanges<NullableIntPK>> get changes =>
      RealmObjectBaseMixin.getChanges(this);

  static const schema = SchemaObject<NullableIntPK>(
    NullableIntPK._,
    'NullableIntPK',
    {
      'id': _idProperty,
    },
    _idProperty,
  );
  @override
  SchemaObject get instanceSchema => schema;
}

class StringPK extends _StringPK
    with RealmEntityMixin, RealmObjectBaseMixin, RealmObjectMixin {
  StringPK(
    String id,
  ) {
    _idProperty.setValue(this, id);
  }

  StringPK._();

  static const _idProperty = ValueProperty<String>(
    'id',
    RealmPropertyType.string,
    primaryKey: true,
  );
  @override
  String get id => _idProperty.getValue(this);
  @override
  set id(String value) => throw RealmUnsupportedSetError();

  @override
  Stream<RealmObjectChanges<StringPK>> get changes =>
      RealmObjectBaseMixin.getChanges(this);

  static const schema = SchemaObject<StringPK>(
    StringPK._,
    'StringPK',
    {
      'id': _idProperty,
    },
    _idProperty,
  );
  @override
  SchemaObject get instanceSchema => schema;
}

class NullableStringPK extends _NullableStringPK
    with RealmEntityMixin, RealmObjectBaseMixin, RealmObjectMixin {
  NullableStringPK(
    String? id,
  ) {
    _idProperty.setValue(this, id);
  }

  NullableStringPK._();

  static const _idProperty = ValueProperty<String?>(
    'id',
    RealmPropertyType.string,
    primaryKey: true,
  );
  @override
  String? get id => _idProperty.getValue(this);
  @override
  set id(String? value) => throw RealmUnsupportedSetError();

  @override
  Stream<RealmObjectChanges<NullableStringPK>> get changes =>
      RealmObjectBaseMixin.getChanges(this);

  static const schema = SchemaObject<NullableStringPK>(
    NullableStringPK._,
    'NullableStringPK',
    {
      'id': _idProperty,
    },
    _idProperty,
  );
  @override
  SchemaObject get instanceSchema => schema;
}

class ObjectIdPK extends _ObjectIdPK
    with RealmEntityMixin, RealmObjectBaseMixin, RealmObjectMixin {
  ObjectIdPK(
    ObjectId id,
  ) {
    _idProperty.setValue(this, id);
  }

  ObjectIdPK._();

  static const _idProperty = ValueProperty<ObjectId>(
    'id',
    RealmPropertyType.objectid,
    primaryKey: true,
  );
  @override
  ObjectId get id => _idProperty.getValue(this);
  @override
  set id(ObjectId value) => throw RealmUnsupportedSetError();

  @override
  Stream<RealmObjectChanges<ObjectIdPK>> get changes =>
      RealmObjectBaseMixin.getChanges(this);

  static const schema = SchemaObject<ObjectIdPK>(
    ObjectIdPK._,
    'ObjectIdPK',
    {
      'id': _idProperty,
    },
    _idProperty,
  );
  @override
  SchemaObject get instanceSchema => schema;
}

class NullableObjectIdPK extends _NullableObjectIdPK
    with RealmEntityMixin, RealmObjectBaseMixin, RealmObjectMixin {
  NullableObjectIdPK(
    ObjectId? id,
  ) {
    _idProperty.setValue(this, id);
  }

  NullableObjectIdPK._();

  static const _idProperty = ValueProperty<ObjectId?>(
    'id',
    RealmPropertyType.objectid,
    primaryKey: true,
  );
  @override
  ObjectId? get id => _idProperty.getValue(this);
  @override
  set id(ObjectId? value) => throw RealmUnsupportedSetError();

  @override
  Stream<RealmObjectChanges<NullableObjectIdPK>> get changes =>
      RealmObjectBaseMixin.getChanges(this);

  static const schema = SchemaObject<NullableObjectIdPK>(
    NullableObjectIdPK._,
    'NullableObjectIdPK',
    {
      'id': _idProperty,
    },
    _idProperty,
  );
  @override
  SchemaObject get instanceSchema => schema;
}

class UuidPK extends _UuidPK
    with RealmEntityMixin, RealmObjectBaseMixin, RealmObjectMixin {
  UuidPK(
    Uuid id,
  ) {
    _idProperty.setValue(this, id);
  }

  UuidPK._();

  static const _idProperty = ValueProperty<Uuid>(
    'id',
    RealmPropertyType.uuid,
    primaryKey: true,
  );
  @override
  Uuid get id => _idProperty.getValue(this);
  @override
  set id(Uuid value) => throw RealmUnsupportedSetError();

  @override
  Stream<RealmObjectChanges<UuidPK>> get changes =>
      RealmObjectBaseMixin.getChanges(this);

  static const schema = SchemaObject<UuidPK>(
    UuidPK._,
    'UuidPK',
    {
      'id': _idProperty,
    },
    _idProperty,
  );
  @override
  SchemaObject get instanceSchema => schema;
}

class NullableUuidPK extends _NullableUuidPK
    with RealmEntityMixin, RealmObjectBaseMixin, RealmObjectMixin {
  NullableUuidPK(
    Uuid? id,
  ) {
    _idProperty.setValue(this, id);
  }

  NullableUuidPK._();

  static const _idProperty = ValueProperty<Uuid?>(
    'id',
    RealmPropertyType.uuid,
    primaryKey: true,
  );
  @override
  Uuid? get id => _idProperty.getValue(this);
  @override
  set id(Uuid? value) => throw RealmUnsupportedSetError();

  @override
  Stream<RealmObjectChanges<NullableUuidPK>> get changes =>
      RealmObjectBaseMixin.getChanges(this);

  static const schema = SchemaObject<NullableUuidPK>(
    NullableUuidPK._,
    'NullableUuidPK',
    {
      'id': _idProperty,
    },
    _idProperty,
  );
  @override
  SchemaObject get instanceSchema => schema;
}
